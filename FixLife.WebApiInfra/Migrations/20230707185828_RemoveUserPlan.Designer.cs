// <auto-generated />
using System;
using FixLife.WebApiInfra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FixLife.WebApiInfra.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230707185828_RemoveUserPlan")]
    partial class RemoveUserPlan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FixLife.WebApiDomain.Common.DayOfWeek", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WeeklyWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyWorkId");

                    b.ToTable("DayOfWeek");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.FreeTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeStart")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("FreeTimes");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.LearnTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsWeekly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsYearly")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeInterval")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LearnTimes");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LearnTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WeeklyWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LearnTimeId");

                    b.HasIndex("WeeklyWorkId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.WeeklyWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TimeEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeStart")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WeeklyWorks");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Common.DayOfWeek", b =>
                {
                    b.HasOne("FixLife.WebApiDomain.Plan.WeeklyWork", null)
                        .WithMany("DayOfWeeks")
                        .HasForeignKey("WeeklyWorkId");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.FreeTime", b =>
                {
                    b.HasOne("FixLife.WebApiDomain.Plan.Plan", null)
                        .WithMany("FreeTime")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.Plan", b =>
                {
                    b.HasOne("FixLife.WebApiDomain.Plan.LearnTime", "LearnTime")
                        .WithMany()
                        .HasForeignKey("LearnTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FixLife.WebApiDomain.Plan.WeeklyWork", "WeeklyWork")
                        .WithMany()
                        .HasForeignKey("WeeklyWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LearnTime");

                    b.Navigation("WeeklyWork");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.Plan", b =>
                {
                    b.Navigation("FreeTime");
                });

            modelBuilder.Entity("FixLife.WebApiDomain.Plan.WeeklyWork", b =>
                {
                    b.Navigation("DayOfWeeks");
                });
#pragma warning restore 612, 618
        }
    }
}
